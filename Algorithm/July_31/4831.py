# A도시는 전기버스를 운행하려고 한다.
# 전기버스는 한번 충전으로 이동할 수 있는 정류장 수가 정해져 있어서, 중간에 충전기가 설치된 정류장을 만들기로 했다.
#
# 버스는 0번에서 출발해 종점인 N번 정류장까지 이동하고, 한번 충전으로 최대한 이동할 수 있는 정류장 수 K가 정해져 있다.
#
# 충전기가 설치된 M개의 정류장 번호가 주어질 때, 최소한 몇 번의 충전을 해야 종점에 도착할 수 있는지 출력하는 프로그램을 만드시오.
#
# 만약 충전기 설치가 잘못되어 종점에 도착할 수 없는 경우는 0을 출력한다.
# 출발지에는 항상 충전기가 설치되어 있지만 충전횟수에는 포함하지 않는다.


# 첫 줄에 노선 수 T가 주어진다.  ( 1 ≤ T ≤ 50 )

# 각 노선별로 K, N, M이 주어지고, 다음줄에 M개의 정류장 번호가 주어진다. ( 1 ≤ K, N, M ≤ 100 )


# #과 노선번호, 빈칸에 이어 최소 충전횟수 또는 0을 출력한다.

T = int(input())

for tc in range(1, T+1):
    K, N, M = map(int, input().split())
    arr = list(map(int, input().split()))

    # 충전 횟수
    ans = 0
    # 현재 위치
    pos = 0
    # 탐색 종료조건
    is_break = False

    # 완전탐색, arr(충전소가 있는 정류장)을 탐색한다.
    for i in range(M):
        # 한번 탐색 할 때마다 탐색 범위가 앞에서부터 한칸씩 줄어들도록 설정 (모든 경우를 탐색)
        for j in range(M-1, i-1, -1):
            # 버스가 최종 목적지인 N을 넘어가게 되면 반복을 종료
            if pos + K >= N:
                is_break = True
                break
            # 이동할 수 있는 최대거리 이전에 정류장이 있을 경우 위치를 변경, 반복
            elif arr[j] <= K + pos:
                pos = arr[j]
                ans += 1
                break
            # 이동할 수 있는 최대거리 이전에 정류장이 없을 경우 반복문을 종료, ans = 0
            elif arr[i+1] - arr[i] > K:
                ans = 0
                is_break = True
                break
        if is_break:
            break

    print(f'#{tc} {ans}')