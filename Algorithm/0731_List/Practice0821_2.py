"""
정환 선생님은 학생들의 시험지를 채점하려고 한다. 
시험은 1부터 5까지의 5개의 항목 중, 정답을 선택하는 객관식으로 총 M개의 문제가 주어진다.
학생들이 제출한 답안지에는 각 문제에 대해 선택한 항목의 번호가 적혀 있다. 

채점 방식은 다음과 같다.
    정답을 맞춘 문제는 1점이 주어진다.
    연속으로 정답을 맞출 경우, 이 전 점수에서 보너스 1점이 가산되어 주어진다.

예를 들어, 학생 A가 아래와 같은 시험지를 제출했을 때, 총점 계산은 아래와 같다. 

총점 : 1 + 2 + 3  + 0 + 1 + 2 + 0 + 0 + 1 + 0 = 10점

M개의 문제에 대한 N명의 학생들의 답안지가 입력으로 주어졌을 때, 가장 높은 점수를 받은 학생과, 가장 낮은 점수를 받은 학생의 점수차를 출력하는 프로그램을 작성하라.

[제약사항] 
    3 <= N <= 30
    2 <= M <= 40 
    정답 및 학생의 답안지로 입력되는 값은 1~5 사이의 정수이다. 

입력
첫번째 줄에는 테스트 케이스의 개수 T가 주어진다. 
두번째 줄부터 각 테스트 케이스가 주어진다.
각 테스트 케이스의 첫번째 줄에는 학생의 수 N, 문제의 수 M이 공백으로 구분되어 주어진다. 
각 테스트 케이스의 두번째 줄에는 M개의 문제에 대한 정답이 공백으로 구분되어 주어진다.
다음 N줄에 걸쳐, N명의 학생이 제출한 M개의 문제에 대한 답안지의 정보가 각 줄에 공백으로 구분되어 주어진다. 

출력
각 테스트 케이 t에 대한 결과를 각 줄에 "#t" (테스트 케이스는 1번부터 시작)을 출력하고, 한 칸을 띄운 다음 정답을 출력한다. 
"""
import sys
sys.stdin = open("input.txt", "r")

T = int(input())
for tc in range(1, T+1):
    N, M = map(int, input().split())
    ans = list(map(int, input().split()))
    sheets = [list(map(int, input().split())) for n in range(N)]
    
    max_s = 0
    min_s = float('inf')
    for sheet in sheets:
        total = 0
        score = 1
        for i in range(M):
            if ans[i] == sheet[i]:
                total += score
                score += 1
            else:
                score = 1
        if max_s < total:
            max_s = total
        if min_s > total:
            min_s = total
    
    print(f'#{tc} {max_s - min_s}')


"""
4
5 10
5 5 5 1 5 3 3 3 3 4
4 2 1 3 1 2 1 4 3 4
2 5 5 1 5 3 3 3 3 4
1 5 5 3 2 3 3 3 5 5
4 5 5 1 5 3 5 4 3 4
5 5 5 2 4 1 3 1 5 1
6 22
2 3 1 4 5 4 3 1 3 3 1 2 3 4 1 3 4 2 2 4 1 5
5 2 5 1 1 2 3 2 3 2 5 1 3 4 1 3 2 3 2 5 4 1 
5 3 1 4 5 4 3 1 3 3 1 2 3 4 1 3 4 2 2 4 1 5
5 4 2 3 5 5 4 3 3 3 4 3 1 1 3 3 5 3 1 4 5 3
4 2 5 1 2 5 2 2 3 5 2 5 3 4 5 2 4 2 1 1 4 5
5 3 4 3 3 5 1 3 5 2 1 5 2 3 2 2 4 3 4 5 1 1
1 5 5 4 5 2 2 4 4 2 2 3 4 1 1 4 1 4 4 4 1 3
6 6
1 4 4 1 1 5
3 4 2 1 4 2
5 2 5 3 5 3
1 1 4 1 1 5
1 1 4 1 1 5
4 5 4 3 2 5
4 3 5 2 5 3
7 13
5 5 3 3 5 5 2 3 2 4 2 4 2 
4 1 3 3 5 5 2 3 2 4 2 4 2
1 5 3 4 5 3 5 2 5 5 5 4 2
5 1 3 3 5 5 2 3 2 4 2 4 2 
3 2 5 1 4 2 5 4 5 4 5 2 2 
4 2 5 4 4 2 2 4 1 3 1 3 4 
2 4 5 4 3 1 4 4 2 4 3 2 3
1 3 1 5 1 2 3 1 2 1 2 3 5

#1 42
#2 227
#3 11
#4 66
"""